<marlin>

  <!-- The lcgeo directory where to look for the ILD model -->

<constants>
    <!-- Output files constants -->
    <constant name="OutputBaseName" value="/lhome/ific/a/almanzam/testsSim/ExampleProcessor/GetMIP/scripts/testAIDA_muon" />
    <constant name="AIDAFileName" value="${OutputBaseName}" />
  </constants>
  
  <!--########  Execute  ######################################## -->
  
  <execute>
    <processor name="MyAIDAProcessor" />
    <!--processor name="InitDD4hep"/-->
    <processor name="MyExampleProcessor"/>
    <!--processor name="DSTOutput"/-->
  </execute>

  <!--########  Global  ######################################## -->
  <global>
    <parameter name="LCIOInputFiles">
    /lhome/ific/a/almanzam/testsSim/Simplified_ECAL_PID/generation/run_scripts/ECALe_tests/data/ECALe_luxe_v0_QGSP_BERT_mu-_10GeV_1.slcio
    </parameter>
    <!--parameter name="AllowToModifyEvent" value="true" /-->  
    <parameter name="MaxRecordNumber" value="101"/>  
    <parameter name="SkipNEvents" value="0"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> DEBUG </parameter>
    <parameter name="RandomSeed" value="1234567890" />
  </global>

  <!-- Init processors : histograming, logging, geometry ... -->
  <processor name="MyAIDAProcessor" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int" value="1"/>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value="${AIDAFileName}"/>
    <!-- type of output file xml (default) or root ( only OpenScientist)-->
    <parameter name="FileType" type="string" value="root "/>
  </processor>

  <processor name="MyExampleProcessor" type="ExampleProcessor">  
    <parameter name="ECALCollectionName" type="string"> SiEcalCollection </parameter>
    <parameter name="MCCollectionName" type="string"> MCParticle </parameter>
  </processor>


</marlin>
